@page
@model WebApplication1.Pages.RegisterModel
@{
    ViewData["Title"] = "Register for Bookworms Online!";
}
<div class="container mt-5">

	<div class="row justify-content-center align-items-center">

		<div class="col-sm-12 col-md-12 col-lg-4">
			<h1 class="mb-3">Register </h1>
            <form method="post" enctype="multipart/form-data">
                @*prevent injection attack*@
                @Html.AntiForgeryToken()
				<div asp-validation-summary="All" class="text-danger"></div>

                <div class="form-group">
                    <label asp-for="RModel.FName">First Name</label>
                    <input asp-for="RModel.FName" class="form-control" />
                    <span asp-validation-for="RModel.FName" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="RModel.LName">Last Name</label>
                    <input asp-for="RModel.LName" class="form-control" />
                    <span asp-validation-for="RModel.LName" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="RModel.CCNo">Credit Card Number</label>
                    <input asp-for="RModel.CCNo" class="form-control" />
                    <span asp-validation-for="RModel.CCNo" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="RModel.MobileNo">Mobile Number</label>
                    <input asp-for="RModel.MobileNo" class="form-control" />
                    <span asp-validation-for="RModel.MobileNo" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="RModel.BillingAddress">Billing Address</label>
                    <input asp-for="RModel.BillingAddress" class="form-control" />
                    <span asp-validation-for="RModel.BillingAddress" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="RModel.ShippingAddress">Shipping Address</label>
                    <input asp-for="RModel.ShippingAddress" class="form-control" />
                    <span asp-validation-for="RModel.ShippingAddress" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="RModel.Email">Email Address</label>
                    <input asp-for="RModel.Email" class="form-control" />
                    <span asp-validation-for="RModel.Email" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="RModel.Password">Password</label>
                    <input asp-for="RModel.Password" id="RModel_Password" type="password" class="form-control" oninput="checkPasswordStrength()" />
                    <span asp-validation-for="RModel.Password" class="text-danger"></span>
                    <span id="passwordError" class="text-danger"></span>
                    <div id="passwordStrength" class="mt-2"></div>
                </div>


                <div class="form-group">
                    <label asp-for="RModel.ConfirmPassword">Confirm Password</label>
                    <input asp-for="RModel.ConfirmPassword" type="password" class="form-control" />
                    <span asp-validation-for="RModel.ConfirmPassword" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label class="form-label" for="imageFile">Select some images:</label>
                    <input asp-for="RModel.Photo" type="file" accept=".jpg" multiple>
                </div>

                <div class="form-group">
                    <button type="submit" class="btn btn-primary">Register</button>
                </div>
			</form>
		</div>
	</div>
</div>


@section Scripts {
    <script>
        function checkPasswordStrength() {
            var password = document.getElementById("RModel_Password").value;
            var criteriaMet = calculatePasswordStrength(password);

            if (criteriaMet === 5) {
                document.getElementById("passwordError").innerHTML = "";
                updatePasswordStrength('strong');
            } else {
                var missingCriteria = getMissingCriteria(password);
                document.getElementById("passwordError").innerHTML = "Password is missing: " + missingCriteria;

                if (criteriaMet >= 3) {
                    updatePasswordStrength('medium');
                } else {
                    updatePasswordStrength('weak');
                }
            }
        }

        function calculatePasswordStrength(password) {
            var criteriaMet = 0;

            // Check for uppercase
            if (/[A-Z]/.test(password)) {
                criteriaMet++;
            }

            // Check for lowercase
            if (/[a-z]/.test(password)) {
                criteriaMet++;
            }

            // Check for special character
            if (/[!#$%^&*()_+{}\[\]:;<>,.?~\\/-]/.test(password)) {
                criteriaMet++;
            }

            // Check for numbers
            if (/\d/.test(password)) {
                criteriaMet++;
            }

            // Check for length greater than or equal to 12
            if (password.length >= 12) {
                criteriaMet++;
            }

            return criteriaMet;
        }

        function getMissingCriteria(password) {
            var missingCriteria = [];

            // Check for missing uppercase
            if (!/[A-Z]/.test(password)) {
                missingCriteria.push("uppercase");
            }

            // Check for missing lowercase
            if (!/[a-z]/.test(password)) {
                missingCriteria.push("lowercase");
            }

            // Check for missing special character
            if (!/[!#$%^&*()_+{}\[\]:;<>,.?~\\/-]/.test(password)) {
                missingCriteria.push("special character");
            }

            // Check for missing numbers
            if (!/\d/.test(password)) {
                missingCriteria.push("numbers");
            }

            // Check for length less than 12
            if (password.length < 12) {
                missingCriteria.push("at least 12 characters");
            }

            return missingCriteria.join(", ");
        }

        function updatePasswordStrength(strength) {
            var strengthElement = document.getElementById("passwordStrength");
            strengthElement.innerHTML = "Password Strength: " + strength;

            // Apply color based on strength
            if (strength === 'weak') {
                strengthElement.style.color = 'red';
            } else if (strength === 'medium') {
                strengthElement.style.color = 'orange';
            } else {
                strengthElement.style.color = 'green';
            }
        }
    </script>
}
